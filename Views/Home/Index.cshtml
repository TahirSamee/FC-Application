@model DashboardViewModel

@{
    ViewData["Title"] = "Home Page";
}


<div class="content">
    @* <div class="row">


        <div class="col-6 col-md-4 col-xl-2">
            <a class="block block-rounded text-center" href="/Location/Location">
                <div class="block-content ribbon ribbon-bookmark ribbon-glass ribbon-left bg-gd-dusk">

                    <p class="mt-2 mb-3">
                        <i class="si si-map fa-2x text-white-75"></i>
                    </p>
                    <p class="fw-semibold text-white">Locations</p>
                </div>
            </a>
        </div>

        <div class="col-6 col-md-4 col-xl-2">
            <a class="block block-rounded text-center" href="/Finance/Finance">
                <div class="block-content ribbon ribbon-bookmark ribbon-glass ribbon-left bg-gd-sea">

                    <p class="mt-2 mb-3">
                        <i class="fa fa-file-invoice-dollar fa-2x text-white-75"></i>
                    </p>
                    <p class="fw-semibold text-white">Finance</p>
                </div>
            </a>
        </div>
        <div class="col-6 col-md-4 col-xl-2">
            <a class="block block-rounded text-center" href="/Location/LocationCreate">
                <div class="block-content bg-gd-primary">
                    <p class="mt-2 mb-3">
                        <i class="fa fa-map-marker-alt fa-2x text-white-75"></i>
                    </p>
                    <p class="fw-semibold text-white">New Location</p>
                </div>
            </a>
        </div>
        <div class="col-6 col-md-4 col-xl-2">
            <a class="block block-rounded text-center" href="/Finance/FinanceCreate">
                <div class="block-content bg-gd-primary">
                    <p class="mt-2 mb-3">
                        <i class="fa fa-dollar fa-2x text-white-75"></i>
                    </p>
                    <p class="fw-semibold text-white">New Finance</p>
                </div>
            </a>
        </div>
        <div class="col-6 col-md-4 col-xl-2">
            <a class="block block-rounded text-center" href="javascript:void(0)">
                <div class="block-content bg-gd-lake">
                    <p class="mt-2 mb-3">
                        <i class="si si-magnifier fa-2x text-white-75"></i>
                    </p>
                    <p class="fw-semibold text-white">Search</p>
                </div>
            </a>
        </div>
        <div class="col-6 col-md-4 col-xl-2">
            <a class="block block-rounded text-center" href="javascript:void(0)">
                <div class="block-content bg-gd-emerald">
                    <p class="mt-2 mb-3">
                        <i class="si si-bar-chart fa-2x text-white-75"></i>
                    </p>
                    <p class="fw-semibold text-white">Statistics</p>
                </div>
            </a>
        </div>

    </div>

    <div class="row">
        <h3>Total Invoices</h3>

        <div class="col-md-6">
            <a class="block block-rounded" href="javascript:void(0)">
                <div class="block-content block-content-full">
                    <i class="si si-map fa-2x text-body-bg-dark"></i>
                    <div class="row pt-2 pb-4 text-center">
                        <div class="col-12 ">
                            <div class="fs-3 fw-semibold">@Model.TotalFinances</div>
                            <div class="fs-sm fw-semibold text-uppercase text-muted">Locations</div>
                        </div>

                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-6">
            <a class="block block-rounded" href="javascript:void(0)">
                <div class="block-content block-content-full">
                    <div class="text-end">
                        <i class="fa fa-file-invoice-dollar fa-2x text-body-bg-dark"></i>
                    </div>
                    <div class="row pt-2 pb-4 text-center">
                        <div class="col-12">
                            <div class="fs-3 fw-semibold">@Model.TotalFinances</div>
                            <div class="fs-sm fw-semibold text-uppercase text-muted">Finances</div>
                        </div>

                    </div>
                </div>
            </a>
        </div>

    </div>

    <div class="row">
        <h3>Pending Invoices</h3>

        <div class="col-md-6">
            <a class="block block-rounded" href="javascript:void(0)">
                <div class="block-content block-content-full">
                    <i class="si si-map fa-2x text-body-bg-dark"></i>
                    <div class="row pt-2 pb-4 text-center">
                        <div class="col-12 ">
                            <div class="fs-3 fw-semibold">@Model.PendingLocations</div>
                            <div class="fs-sm fw-semibold text-uppercase text-muted">Locations</div>
                        </div>

                    </div>
                </div>
            </a>
        </div>
        <div class="col-md-6">
            <a class="block block-rounded" href="javascript:void(0)">
                <div class="block-content block-content-full">
                    <div class="text-end">
                        <i class="fa fa-file-invoice-dollar fa-2x text-body-bg-dark"></i>
                    </div>
                    <div class="row pt-2 pb-4 text-center">
                        <div class="col-12">
                            <div class="fs-3 fw-semibold">@Model.PendingFinances</div>
                            <div class="fs-sm fw-semibold text-uppercase text-muted">Finances</div>
                        </div>

                    </div>
                </div>
            </a>
        </div>

    </div> *@

    <div class="row">
        <div class="col-md-6">
            <div class="block block-rounded block-bordered">
                <div class="block-header block-header-default border-bottom bg-gd-dusk">
                    <h3 class="block-title text-white">Pending Work Orders</h3>

                </div>
                <div class="block-content p-1">
                    <div class="table-responsive">
                        <table class="table table-sm table-borderless table-striped">
                            <thead class="table-dark text-nowrap">
                                <tr>
                                    <th>Location ID</th>
                                    <th>Sales Order ID</th>
                                    <th>Client</th>
                                    <th>Brand Name</th>
                                    <th>Service</th>
                                    <th>Address</th>
                                    <th>State</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Locations.Count()>0)
                                {
                                    @foreach (var item in Model.Locations)
                                    {
                                        <tr>
                                            <td>
                                                <a class="fw-semibold" asp-controller="Location" asp-action="LocationEdit" asp-route-SrNo="@item.SrNo">@item.LocationID</a>
                                            </td>
                                            <td>
                                                <span>@item.SalesOrderID</span>
                                            </td>
                                            <td>
                                                <span>@item.Client</span>
                                            </td>
                                            <td>
                                                <span>@item.BrandName</span>
                                            </td>
                                            <td>
                                                <span>@item.Service</span>
                                            </td>
                                            <td>
                                                <span>@item.Address</span>
                                            </td>
                                           
                                            <td>
                                                <span>@item.State</span>
                                            </td>
                                            
                                        </tr>
                                    }

                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center text-muted">No pending work orders</td>
                                    </tr>
                                }

                                @* <tr>
                                <td colspan="7" class="text-center">
                                    <a class="fw-semibold" href="/Location/Location">Show More</a>
                                </td>

                            </tr> *@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="block block-rounded block-bordered">
                <div class="block-header block-header-default border-bottom bg-gd-dusk">
                    <h3 class="block-title text-white">Pending Invoices</h3>

                </div>
                <div class="block-content p-1">
                    <div class="table-responsive">
                        <table class="table table-sm table-borderless table-striped">
                            <thead class="table-dark text-nowrap">
                                <tr>
                                    <th>SO Number</th>
                                    <th>Client</th>
                                    <th>Customer</th>
                                    <th>Date Received</th>
                                    <th>POC Email</th>
                                    <th>Service Type</th>
                                    <th>POC Name</th>
                                    <th>Unit Quantity</th>
                                    <th>Proposal Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Finances.Count()>0)
                                {
                                    @foreach (var item in Model.Finances)
                                    {
                                        <tr>
                                            <td>
                                                <a class="fw-semibold" asp-controller="Finance" asp-action="FinanceEdit" asp-route-SrNo="@item.SrNo">@item.SONumber</a>
                                            </td>
                                            <td>
                                                <span>@item.Client</span>
                                            </td>
                                            <td>
                                                <span>@item.Customer</span>
                                            </td>
                                            <td>
                                                <span>@item.DateReceived</span>
                                            </td>
                                            <td>
                                                <span>@item.POCEmail</span>
                                            </td>
                                            <td>
                                                <span>@item.ServiceType</span>
                                            </td>
                                            <td>
                                                <span>@item.POCName</span>
                                            </td>
                                            <td>
                                                <span>@item.UnitQuantity</span>
                                            </td>
                                            <td>
                                                <span>@item.ProposalTotal</span>
                                            </td>
                                        </tr>
                                    }

                                }
                                else
                                {
                                    <tr>
                                        <td colspan="9" class="text-center text-muted">No pending invoices</td>
                                    </tr>
                                }

                            @* <tr>
                                <td colspan="9" class="text-center">
                                        <a class="fw-semibold" href="/Finance/Finance">Show More</a>
                                </td>

                            </tr> *@
                        </tbody>
                    </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
        <div id="usaMap" style="height: 500px; width: 100%;"></div>
        </div>
    </div>
</div>
<!-- END Page Content -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC3NlgdEG-F7i2xdDvHSG24vKHdu-1_-7Y&sensor=false"></script>

<script>
    var map = L.map('usaMap').setView([37.8, -96], 4);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 18
    }).addTo(map);

    var locations = @Html.Raw(ViewBag.PendingLocations);
    var heatPoints = [];
    var bounds = L.latLngBounds([]);

   // async function geocodeAddressesSequentially(locations) {
   //      for (const loc of locations) {
   //          try {
   //              // Build combined free-text address
   //              let fullAddress = `${loc.address}, ${loc.city}, ${loc.state}, USA`;

   //              const response = await fetch(
   //                  `https://photon.komoot.io/api/?q=${encodeURIComponent(fullAddress)}`
   //              );
   //              const data = await response.json();
   //              debugger
   //              if (data.features && data.features.length > 0) {
   //                  let lat = data.features[0].geometry.coordinates[1]; // Y = lat
   //                  let lon = data.features[0].geometry.coordinates[0]; // X = lon

   //                  // Add marker
   //                  L.marker([lat, lon])
   //                      .addTo(map)
   //                      .bindPopup(
   //                          `<b>${loc.locationid}</b><br>Status: ${loc.status}<br>` +
   //                          `Address: ${fullAddress}`
   //                      );

   //                  // Add to heatmap
   //                  heatPoints.push([lat, lon, 1]);

   //                  // Extend bounds
   //                  bounds.extend([lat, lon]);
   //              }
   //          } catch (err) {
   //              console.error("Geocoding error:", err);
   //          }

   //          // Photon doesn't have strict rate limits like Nominatim,
   //          // but let's still delay slightly to be nice to the server
   //          await new Promise(r => setTimeout(r, 300));
   //      }

   //      // Add heat layer
   //      if (heatPoints.length > 0) {
   //          L.heatLayer(heatPoints, { radius: 25 }).addTo(map);
   //          map.fitBounds(bounds);
   //      }
   //  }

    async function geocodeAddressesSequentially(locations) {
        const apiKey = 'AIzaSyC3NlgdEG-F7i2xdDvHSG24vKHdu-1_-7Y'; // Reusing your existing key

        for (const loc of locations) {
            try {
                const fullAddress = `${loc.address}, ${loc.city}, ${loc.state}, USA`;

                const response = await fetch(
                    `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(fullAddress)}&key=${apiKey}`
                );
                debugger
                const data = await response.json();

                if (data.status === "OK" && data.results.length > 0) {
                    const lat = data.results[0].geometry.location.lat;
                    const lon = data.results[0].geometry.location.lng;

                    // Add marker
                    L.marker([lat, lon])
                        .addTo(map)
                        .bindPopup(
                            `<b>${loc.locationid}</b><br>Status: ${loc.status}<br>Address: ${fullAddress}`
                        );

                    // Add to heatmap
                    heatPoints.push([lat, lon, 1]);

                    // Extend bounds
                    bounds.extend([lat, lon]);
                } else {
                    console.warn("Geocoding failed:", data.status, fullAddress);
                }
            } catch (err) {
                console.error("Geocoding error:", err);
            }

            // Wait to avoid potential rate limits
            await new Promise(r => setTimeout(r, 300));
        }

        // Add heat layer if points found
        if (heatPoints.length > 0) {
            L.heatLayer(heatPoints, { radius: 25 }).addTo(map);
            map.fitBounds(bounds);
        }
    }

   

    geocodeAddressesSequentially(locations);
</script>


